<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.wxiaoqi.security.admin.mapper.CourseMapper" >
  <resultMap id="BaseResultMap" type="com.github.wxiaoqi.security.api.entity.Course" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="course_content" property="courseContent" jdbcType="VARCHAR" />
    <result column="course_date" property="courseDate" jdbcType="VARCHAR" />
    <result column="course_lables" property="courseLables" jdbcType="VARCHAR" />
    <result column="course_name" property="courseName" jdbcType="VARCHAR" />
    <result column="course_num" property="courseNum" jdbcType="INTEGER" />
    <result column="org_id" property="orgId" jdbcType="BIGINT" />
    <result column="org_name" property="orgName" jdbcType="VARCHAR" />
    <result column="card_id" property="cardId" jdbcType="BIGINT" />
    <result column="card_name" property="cardName" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="DATE"/>
    <result column="end_time" property="endTime" jdbcType="DATE"/>
     <result column="course_max_student" property="courseMaxStudent" jdbcType="INTEGER" />
      <result column="course_type" property="courseType" jdbcType="INTEGER" />
  </resultMap>
  
  <select id="selectCourseByOrgId" resultMap="BaseResultMap">
    select t.* from igrowth_course t,igrowth_org o where t.org_id = o.id and o.base_user_id = #{userId} order by t.id
  </select>
  
  <select id="getAllCourseLables" resultType="java.lang.String">
    select distinct t.course_lables from igrowth_course t
  </select>


  <insert id="insertCourse" parameterType="com.github.wxiaoqi.security.api.entity.Course"  keyProperty="id" useGeneratedKeys="true" >
        insert into igrowth_course (course_content, course_date, course_type,course_status, course_lables, course_name,
                                    start_time,end_time,course_num,course_tabs,org_id,org_name,course_itro,
                                    card_id,card_name,teacher_id,teacher_name,course_max_student,org_classify_id)
        values (#{courseContent,jdbcType=VARCHAR},
                #{courseDate,jdbcType=VARCHAR},
                #{courseType,jdbcType=INTEGER},
                #{courseStatus,jdbcType=INTEGER},
                #{courseLables,jdbcType=VARCHAR},
                #{courseName,jdbcType=VARCHAR},
                #{startTime,jdbcType=DATE},
                #{endTime,jdbcType=DATE},
                #{courseNum,jdbcType=INTEGER},
                #{courseTabs,jdbcType=VARCHAR},
                #{orgId,jdbcType=BIGINT},
                #{orgName,jdbcType=VARCHAR},
                #{courseItro,jdbcType=VARCHAR},
                #{cardId,jdbcType=BIGINT},
                #{cardName,jdbcType=VARCHAR},
                #{teacherId,jdbcType=INTEGER},
                #{teacherName,jdbcType=VARCHAR},
                #{courseMaxStudent,jdbcType=INTEGER},
                #{orgClassifyId,jdbcType=BIGINT})
      <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
          SELECT LAST_INSERT_ID()
      </selectKey>
  </insert>

  <select id="findCourseByTeacherId" resultMap="BaseResultMap">
    SELECT * from igrowth_lesson where teacher_id = #{teacherId} GROUP BY course_id
  </select>
  
  <select id="selectActiveCourseByOrgId" resultMap="BaseResultMap">
    SELECT * from igrowth_course where id in(
		SELECT DISTINCT course_id from igrowth_lesson where course_id in(
		SELECT id from igrowth_course  where org_id = #{orgId}
	))
    <if test="courseType!=-1">
       AND course_type = #{courseType}
    </if>
  </select>
  
  <select id="findOrgClassifyIdsByOrgId" resultType="java.lang.Long">
    select DISTINCT org_classify_id from igrowth_course where org_id = #{orgId}
  </select>
  
</mapper>