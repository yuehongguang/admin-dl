logging:
    level:
        tk.mybatis: DEBUG
        com.github.wxiaoqi.security.admin: DEBUG
spring:
    http:
        multipart:
            enabled: true
            max-file-size: 50MB #(这里是限制的文件大小)
            max-request-size: 50MB #(这里是限制的文件大小)
    application:
        name: admin-back
    jackson:
        date-format: yyyy-MM-dd HH:mm:ss
        time-zone: GMT+8
        default-property-inclusion: NON_NULL
    redis:
        database: 0
        host: 127.0.0.1
        port: 6379
        pool:
            max-active: 20
    datasource:
        name: test
#        url: jdbc:mysql://123.57.157.44:3306/igrowth_app?useUnicode=true&characterEncoding=UTF8
#        username: feichina
#        password: xlgl1004
        url: jdbc:mysql://127.0.0.1:3306/jby_app?useUnicode=true&characterEncoding=UTF8
        username: root
        password: root
        # 使用druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        filters: stat
        maxActive: 20
        initialSize: 1
        maxWait: 60000
        minIdle: 1
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        validationQuery: select 'x'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        poolPreparedStatements: true
        maxOpenPreparedStatements: 20
mybatis:
    basepackage: com.github.wxiaoqi.security.admin.mapper
    xmlLocation: classpath:mapper/**/*.xml

server:
    port: 8762

eureka:
    instance:
        statusPageUrlPath: /info
        healthCheckUrlPath: /health
        # docker 部署开启
        #prefer-ip-address: true
        #ip-address: 127.0.0.1
    client:
        registerWithEureka: true
        fetchRegistry: true
        serviceUrl:
            defaultZone: http://localhost:8761/eureka/
                    # docker 部署开启
            #defaultZone: http://center:8761/eureka/
swagger:
    basepackage: com.github.wxiaoqi.security.admin
    service:
        name: Admin Back
        description: Admin Back后端服务
        developer: 老A


auth:
  serviceId: ace-auth
  user:
    token-header: Authorization
    pub-key:
      path: jwt/pub.key
  client:
    id: ace-admin
    secret: 123456
    token-header: client-token
    pub-key:
      path: client/pub.key